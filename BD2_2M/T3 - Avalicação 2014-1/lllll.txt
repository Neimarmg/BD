CREATE TABLE vendas_itens {
	codigo_item serial PRIMARY KEY, 
	codigo_venda INTEGER, 
	codigo_produto INTEGER, 
	quantidade_item INTEGER
)

SELECT * Itens_venda;


CREATE TABLE vendas {
	idVenda serial PRIMARY KEY, 
	data_venda DATE, 
	cpf_cliente VARCHAR, 
	cpf_funcionario VARCHAR
)

SELECT * vendas;


CREATE TABLE bonus {
	codigo_bonus serial PRIMARY KEY, 
	codigo_bonus INTEGER, 
	cpf_cliente INTEGER, 
	codigo_venda INTEGER, 
	bonus DOUBLE
)

SELECT * bonus;

CREATE TABLE produtos (

	idProduto serial PRIMARY KEY, 
	nome VARCHAR(50) UNIQUE NOT NULL,
	unidade INTEGER, 
	quantidade INTEGER NOT NULL, 
	preco_unitario DOUBLE, 
	estoque_minimo INTEGER,
	estoque_maximo INTEGER UNIQUE
	
)

SELECT * produtos;

ALTER TABLE produtos ALTER column quantidade type NUMERIC;

CREATE TABLE clientes (
	
	idCliente serial PRIMARY KEY, 
	cpf VARCHAR(20),
	nome VARCHAR(50) NOT NULL,
	endereco VARCHAR(100) NOT NULL,
	idCidade INTEGER NOT NULL,
	uf VARCHAR(02) NOT NULL,
	cep VARCHAR(100),
	telefone VARCHAR(15),
	data_cadastro DATE,
	data_nascimento DATE

	CHECK (	
		idCidade > 0
	),
	
	CONSTRAINTS fk_clientes FOREIGN KEY (idCidade) REFERENCES cidades(idCidade)
	
)

SELECT * clientes;

-- Exe 11
CREATE or replace FUNCTION get_cliente_mais_atigo() RETURNS TABLE (
nome VARCHAR (15),
data_cadastro DATE) AS $$
BEGIN
RETURN 
	QUERY SELECT INTO
		clientes.nome,
		MAX(clientes.data_cadastro)
		FROM clientes        
RETURN;
END;
$$ LANGUAGE 'plpgsql'


SELECT * FROM get_cliente_mais_atigo();

