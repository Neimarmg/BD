CREATE TABLE Aluno (
	CdAluno serial PRIMARY KEY, 
	NomeAluno VARCHAR (50),
    CdCurso INTEGER NULL,
    VlrMensal NUMERIC NULL,
    CdCidade INTEGER NULL,
    QtdDisciplinas NUMERIC NULL,
    QtdRetirada NUMERIC NULL
)

--==========================<< Trigger atualiza estoque >>==================================

2. Criação de uma trigger para impedir que um aluno retire mais que 3 livros, deve atualizar a cada movimentação de retirada / devolução.

a)aluno.Qtdretirada



CREATE OR REPLACE FUNCTION atualiza_aluno() RETURNS TRIGGER AS $emp_audit$
    BEGIN

		IF (TG_OP = 'DELETE') THEN
		
           UPDATE Aluno set Qtdretirada = Qtdretirada + OLD.Qtdretirada WHERE Aluno.CdAluno = OLD.Aluno.CdAluno; 
                   
          RETURN OLD;

		ELSEIF (TG_OP = 'UPDATE') THEN
		
			UPDATE Aluno set Qtdalunos = Qtdalunos + OLD.Qtdalunos - new.Qtdalunos WHERE Cidade.CdCidade = OLD.Cidade.CdCidade;
                     
          RETURN NEW;
   
		ELSEIF (TG_OP = 'INSERT') THEN
		
            UPDATE Aluno set Qtdalunos = Qtdalunos - new.Qtdalunos WHERE Cidade.CdCidade = OLD.Cidade.CdCidade; 
               
           RETURN NEW;
        
		END IF;
      
		RETURN NULL;
    
	END;
    $emp_audit$ LANGUAGE plpgsql;